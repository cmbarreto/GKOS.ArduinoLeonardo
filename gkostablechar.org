GKOS Table

|--------+--------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+------+------+-----+-----+----------+-----+-------+---------+---------+---------+-------+---------+----------+---------+-----+----------+-----------+--------+----------+--------+--------+--------+--------+----------+---------+-----------+---------+--------|
| RefNum | 0      | 1   | 2   | 3   | 4   | 5   | 6   | 7   | 8   | 9   | 10  | 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  | 20  | 21  | 22  | 23  | 24  | 25  | 26  | 27  | 28  | 29  | 30  | 31  | 32  | 33  | 34  | 35  | 36   | 37   | 38  | 39  | 40       | 41  |    42 |      43 |      44 |      45 |    46 |      47 |       48 |      49 |  50 |       51 |        52 |     53 |       54 |     55 |     56 |     57 |     58 |       59 |      60 |        61 |      62 |     63 |
|--------+--------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+------+------+-----+-----+----------+-----+-------+---------+---------+---------+-------+---------+----------+---------+-----+----------+-----------+--------+----------+--------+--------+--------+--------+----------+---------+-----------+---------+--------|
| Combo  | 00     | 10  | 00  | 00  | 01  | 00  | 00  | 01  | 11  | 01  | 01  | 00  | 10  | 00  | 00  | 10  | 11  | 10  | 10  | 00  | 01  | 00  | 00  | 01  | 11  | 01  | 01  | 10  | 11  | 10  | 10  | 00  | 00  | 01  | 10  | 10  | 01   | 10   | 01  | 10  | 01       | 11  |    11 |      00 |      11 |      00 |    10 |      11 |       10 |      10 |  01 |       11 |        01 |     01 |       11 |     11 |     11 |     01 |     11 |       00 |      11 |        11 |      11 |     10 |
|        | 00     | 00  | 10  | 00  | 00  | 01  | 00  | 01  | 01  | 11  | 01  | 01  | 01  | 11  | 01  | 10  | 10  | 11  | 10  | 10  | 10  | 11  | 10  | 00  | 00  | 10  | 00  | 00  | 00  | 01  | 00  | 10  | 01  | 00  | 00  | 01  | 10   | 11   | 11  | 01  | 10       | 01  |    00 |      00 |      11 |      11 |    10 |      10 |       11 |      10 |  01 |       01 |        11 |     01 |       11 |     01 |     11 |     11 |     10 |       11 |      00 |        11 |      10 |     11 |
|        | 00     | 00  | 00  | 10  | 00  | 00  | 01  | 00  | 00  | 00  | 10  | 01  | 01  | 01  | 11  | 00  | 00  | 00  | 01  | 10  | 10  | 10  | 11  | 01  | 01  | 01  | 11  | 10  | 10  | 10  | 11  | 01  | 10  | 10  | 01  | 00  | 00   | 01   | 10  | 11  | 11       | 10  |    00 |      11 |      00 |      11 |    10 |      10 |       10 |      11 |  01 |       01 |        01 |     11 |       01 |     11 |     10 |     11 |     01 |       00 |      11 |        11 |      11 |     11 |
|--------+--------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+------+------+-----+-----+----------+-----+-------+---------+---------+---------+-------+---------+----------+---------+-----+----------+-----------+--------+----------+--------+--------+--------+--------+----------+---------+-----------+---------+--------|
| ES     | "NULL" | "a" | "u" | "c" | "i" | "e" | "r" | "t" | "h" | "g" | "j" | "n" | "á" | "b" | "k" | "o" | "p" | "f" | "q" | "s" | "w" | "m" | "v" | "l" | "x" | "y" | "z" | "d" | "ú" | "é" | "ó" | "." | "," | "!" | "?" | "-" | "\'" | "\\" | "/" | "ñ" | "ü"      | "í" | "_Up" | "_Down" | "_PgUp" | "_PgDn" | "_BS" | "_Left" | "_WLeft" | "_Home" | " " | "_Right" | "_WRight" | "_End" | "_Enter" | "_Tab" | "_Esc" | "_Del" | "_Ins" | "_Shift" | "_SYMB" | "_123abc" | "_Ctrl" | "_Alt" |
|        | "NULL" | "A" | "U" | "C" | "I" | "E" | "R" | "T" | "H" | "G" | "J" | "N" | "Á" | "B" | "K" | "O" | "P" | "F" | "Q" | "S" | "W" | "M" | "V" | "L" | "X" | "Y" | "Z" | "D" | "Ú" | "É" | "Ó" | "." | "," | "¡" | "¿" | "_" | "\'" | "\\" | "/" | "Ñ" | "Ü"      | "Í" |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |
|        | "NULL" | "A" | "U" | "C" | "I" | "E" | "R" | "T" | "H" | "G" | "J" | "N" | "Á" | "B" | "K" | "O" | "P" | "F" | "Q" | "S" | "W" | "M" | "V" | "L" | "X" | "Y" | "Z" | "D" | "Ú" | "É" | "Ó" | "." | "," | "!" | "?" | "-" | "\'" | "\\" | "/" | "Ñ" | "Ü"      | "Í" |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |
|        | "NULL" | "1" | "2" | "3" | "4" | "5" | "6" | "0" | "7" | "8" | "9" | "#" | "@" | "½" | "&" | "+" | "%" | "^" | "=" | "*" | "$" | "€" | "£" | "(" | "[" | "<" | "{" | ")" | "]" | ">" | "}" | "." | "," | ""  | "~" | "-" | "\'" | "\\" | "/" | "μ" | "\u0308" | "ª" |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |
|        | "NULL" | "1" | "2" | "3" | "4" | "5" | "6" | "0" | "7" | "8" | "9" | "#" | "@" | "½" | "&" | "+" | "%" | "^" | "=" | "*" | "$" | "€" | "£" | "(" | "[" | "<" | "{" | ")" | "]" | ">" | "}" | ":" | ";" | ""  | "~" | "_" | "\"" | "`"  | "´" | "μ" | "§"      | "º" | "_Up" | "_Down" | "_PgUp" | "_PgDn" | "_BS" | "_Left" | "_WLeft" | "_Home" | " " | "_Right" | "_WRight" | "_End" | "_Enter" | "_Tab" | "_Esc" | "_Del" |    "°" | "_Shift" | "_SYMB" | "_123abc" | "_Ctrl" | "_Alt" |
|--------+--------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+------+------+-----+-----+----------+-----+-------+---------+---------+---------+-------+---------+----------+---------+-----+----------+-----------+--------+----------+--------+--------+--------+--------+----------+---------+-----------+---------+--------|





|        | "NULL" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "th" | "that " | "the " | "of " | "." | "" | "!" | "?" | "-" | "\'" | "\\" | "/" | "and " | "§" | "to " | "_Up" | "_Down" | "_PgUp" | "_PgDn" | "_BS" | "_Left" | "_WLeft" | "_Home" | " " | "_Right" | "_WRight" | "_End" | "_Enter" | "_Tab" | "_Esc" | "_Del" | "_Ins" | "_Shift" | "_SYMB" | "_123abc" | "_Ctrl" | "_Alt" |
|



;; This buffer is for notes you don't want to save, and for Lisp evaluation.
;; If you want to create a file, visit that file with C-x C-f,
;; then enter the text in that file's own buffer.

con optimizacion
EN
ES (copiar desde 0 a 41 de los que corresponda) Falta  agregar |, ver letras de nuevo, u con tilde 
| 0      | 1   | 2   | 3   | 4   | 5   | 6   | 7   | 8   | 9   | 10  | 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  | 20  | 21  | 22  | 23  | 24  | 25  | 26  | 27"" | 28      | 29     | 30    | 31  | 32" | 33  | 34  | 35  | 36   | 37   | 38  | 39     | 40       | 41    | 42    | 43      | 44      | 45      | 46    | 47      | 48       | 49      | 50  | 51       | 52        | 53     | 54       | 55     | 56     | 57     | 58     | 59       | 60      | 61        | 62      | 63     |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "a" | "m" | "c" | "i" | "e" | "r" | "t" | "h" | "g" | "j" | "n" | "h" | "b" | "k" | "o" | "p" | "q" | "f" | "s" | "w" | "u" | "v" | "l" | "x" | "y" | "z" | "d"  | "that " | "the " | "of " | "." | ""  | "!" | "?" | "-" | "\'" | "\\" | "/" | "and " | "§"      | "to " | "_Up" | "_Down" | "_PgUp" | "_PgDn" | "_BS" | "_Left" | "_WLeft" | "_Home" | " " | "_Right" | "_WRight" | "_End" | "_Enter" | "_Tab" | "_Esc" | "_Del" | "_Ins" | "_Shift" | "_SYMB" | "_123abc" | "_Ctrl" | "_Alt" |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
||
| opt    | a   | u   | c   | i   | e   | r   | t   | h   | g   | j   | n   | á   | b   | k   | o   | p   | f   | q   | s   | w   | m   | v   | l   | x   | y   | z   | d    |         |        |       |     |     |     |     |     |      |      |     |        |          |       |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| opt3   | a   | i   | r   | u   | e   | m   | t   |     | h   | j   | n   | g   | b   | k   | o   | p   | f   | q   | s   | w   | c   | v   | l   | x   | y   | z   | d    |         |        |       |     |     |     |     |     |      |      |     |        |          |       |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "a" | "u" | "c" | "i" | "e" | "r" | "t" | "h" | "g" | "j" | "n" | "á" | "b" | "k" | "o" | "p" | "f" | "q" | "s" | "w" | "m" | "v" | "l" | "x" | "y" | "z" | "d"  | "ú"     | "é"    | "ó"   | "." | "," | "!" | "?" | "-" | "\'" | "\\" | "/" | "ñ"    | "ü"      | "í"   | "_Up" | "_Down" | "_PgUp" | "_PgDn" | "_BS" | "_Left" | "_WLeft" | "_Home" | " " | "_Right" | "_WRight" | "_End" | "_Enter" | "_Tab" | "_Esc" | "_Del" | "_Ins" | "_Shift" | "_SYMB" | "_123abc" | "_Ctrl" | "_Alt" |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "A" | "U" | "C" | "I" | "E" | "R" | "T" | "H" | "G" | "J" | "N" | "Á" | "B" | "K" | "O" | "P" | "F" | "Q" | "S" | "W" | "M" | "V" | "L" | "X" | "Y" | "Z" | "D"  | "Ú"     | "É"    | "Ó"   | "." | "," | "¡" | "¿" | "_" | "\'" | "\\" | "/" | "Ñ"    | "Ü"      | "Í"   |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "A" | "U" | "C" | "I" | "E" | "R" | "T" | "H" | "G" | "J" | "N" | "Á" | "B" | "K" | "O" | "P" | "F" | "Q" | "S" | "W" | "M" | "V" | "L" | "X" | "Y" | "Z" | "D"  | "Ú"     | "É"    | "Ó"   | "." | "," | "!" | "?" | "-" | "\'" | "\\" | "/" | "Ñ"    | "Ü"      | "Í"   |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "1" | "2" | "3" | "4" | "5" | "6" | "0" | "7" | "8" | "9" | "#" | "@" | "½" | "&" | "+" | "%" | "^" | "=" | "*" | "$" | "€" | "£" | "(" | "[" | "<" | "{" | ")"  | "]"     | ">"    | "}"   | "." | "," | ""  | "~" | "-" | "\'" | "\\" | "/" | "μ"    | "\u0308" | "ª"   |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "1" | "2" | "3" | "4" | "5" | "6" | "0" | "7" | "8" | "9" | "#" | "@" | "½" | "&" | "+" | "%" | "^" | "=" | "*" | "$" | "€" | "£" | "(" | "[" | "<" | "{" | ")"  | "]"     | ">"    | "}"   | ":" | ";" | ""  | "~" | "_" | "\"" | "`"  | "´" | "μ"    | "§"      | "º"   | "_Up" | "_Down" | "_PgUp" | "_PgDn" | "_BS" | "_Left" | "_WLeft" | "_Home" | " " | "_Right" | "_WRight" | "_End" | "_Enter" | "_Tab" | "_Esc" | "_Del" | "°"    | "_Shift" | "_SYMB" | "_123abc" | "_Ctrl" | "_Alt" |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |

| 0      | 1   | 2   | 15  | 3   | 27  | 19  | 46  | 4   | 42  | 36  | 16  | 33  | 28  | 20  | 47  | 5   | 35  | 59  | 17  | 32  | 29  | 21  | 48  | 7   | 8   | 9   | 44   | 10      | 41     | 38    | 56  | 6   | 34  | 31  | 18  | 43   | 30   | 22  | 49     | 23  "  " | 24    | 25    | 58      | 26      | 60      | 40    | 62      | 11       | 12      | 13  | 37       | 14        | 39     | 45       | 63     | 50     | 51     | 52     | 54       | 53      | 55        | 57      | 61     |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "th" | "that " | "the " | "of " | "." | ""  | "!" | "?" | "-" | "\'" | "\\" | "/" | "and " | "§"      | "to " | "_Up" | "_Down" | "_PgUp" | "_PgDn" | "_BS" | "_Left" | "_WLeft" | "_Home" | " " | "_Right" | "_WRight" | "_End" | "_Enter" | "_Tab" | "_Esc" | "_Del" | "_Ins" | "_Shift" | "_SYMB" | "_123abc" | "_Ctrl" | "_Alt" |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "Th" | "That " | "The " | "Of " | "." | ""  | "!" | "?" | "-" | "\'" | "\\" | "/" | "And " | "§"      | "To " |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "TH" | "THAT " | "THE " | "OF " | "." | ""  | "!" | "?" | "-" | "\'" | "\\" | "/" | "AND " | "§"      | "TO " |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "1" | "2" | "3" | "4" | "5" | "6" | "0" | "7" | "8" | "9" | "#" | "@" | "½" | "&" | "+" | "%" | "=" | "^" | "*" | "$" | "€" | "£" | "(" | "[" | "<" | "{" | ")"  | "]"     | ">"    | "}"   | "." | ""  | ""  | "~" | "-" | "\'" | "\\" | "/" | "μ"    | "§"      | ""    |       |         |         |         |       |         |          |         |     |          |           |        |          |        |        |        |        |          |         |           |         |        |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
| "NULL" | "1" | "2" | "3" | "4" | "5" | "6" | "0" | "7" | "8" | "9" | "#" | "@" | "½" | "&" | "+" | "%" | "=" | "^" | "*" | "$" | "€" | "£" | "(" | "[" | "<" | "{" | ")"  | "]"     | ">"    | "}"   | ":" | ";" | ""  | "~" | "_" | "\"" | "`"  | "´" | "μ"    | "§"      | ""    | "_Up" | "_Down" | "_PgUp" | "_PgDn" | "_BS" | "_Left" | "_WLeft" | "_Home" | " " | "_Right" | "_WRight" | "_End" | "_Enter" | "_Tab" | "_Esc" | "_Del" | "°"    | "_Shift" | "_SYMB" | "_123abc" | "_Ctrl" | "_Alt" |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |



Para spanish
 "NULL" , "a" , "u" , "c" , "i" , "e" , "r" , "t" , "h" , "g" , "j" , "n" , "á" , "b" , "k" , "o" , "p" , "f" , "q" , "s" , "w" , "m" , "v" , "l" , "x" , "y" , "z" , "d"  , "ú"     , "é"    , "ó"   , "." , "," , "!" , "?" , "-" , "\'" , "\\" , "/" , "ñ"    , "ü"      , "í"
 "NULL" , "A" , "U" , "C" , "I" , "E" , "R" , "T" , "H" , "G" , "J" , "N" , "Á" , "B" , "K" , "O" , "P" , "F" , "Q" , "S" , "W" , "M" , "V" , "L" , "X" , "Y" , "Z" , "D"  , "Ú"     , "É"    , "Ó"   , "." , "," , "¡" , "¿" , "_" , "\'" , "\\" , "/" , "Ñ"    , "Ü"      , "Í"
 "NULL" , "A" , "U" , "C" , "I" , "E" , "R" , "T" , "H" , "G" , "J" , "N" , "Á" , "B" , "K" , "O" , "P" , "F" , "Q" , "S" , "W" , "M" , "V" , "L" , "X" , "Y" , "Z" , "D"  , "Ú"     , "É"    , "Ó"   , "." , "," , "!" , "?" , "-" , "\'" , "\\" , "/" , "Ñ"    , "Ü"      , "Í"
 "NULL" , "1" , "2" , "3" , "4" , "5" , "6" , "0" , "7" , "8" , "9" , "#" , "@" , "½" , "&" , "+" , "%" , "^" , "=" , "*" , "$" , "€" , "£" , "(" , "[" , "<" , "{" , ")"  , "]"     , ">"    , "}"   , "." , "," , "|"  , "~" , "-" , "\'" , "\\" , "/" , "μ"    , "\u0308" , "ª"
 "NULL" , "1" , "2" , "3" , "4" , "5" , "6" , "0" , "7" , "8" , "9" , "#" , "@" , "½" , "&" , "+" , "%" , "^" , "=" , "*" , "$" , "€" , "£" , "(" , "[" , "<" , "{" , ")"  , "]"     , ">"    , "}"   , ":" , ";" , "|"  , "~" , "_" , "\"" , "`"  , "´" , "μ"    , "§"      , "º"


const static char* _gChar[]={"NULL" , "a" , "u" , "c" , "i" , "e" , "r" , "t" , "h" , "g" , "j" , "n" , "á" , "b" , "k" , "o" , "p" , "f" , "q" , "s" , "w" , "m" , "v" , "l" , "x" , "y" , "z" , "d"  , "ú"     , "é"    , "ó"   , "." , "," , "!" , "?" , "-" , "\'" , "\\" , "/" , "ñ"    , "ü"      , "í", "_Up", "_Down", "_PgUp", "_PgDn", "_BS", "_Left", "_WLeft", "_Home", " ", "_Right", "_WRight", "_End", "_Enter", "_Tab", "_Esc", "_Del", "_Ins", "_Shift", "_SYMB", "_123abc", "_Ctrl", "_Alt" };

// SHFT (Shift): (NULL +) only first 41 may differ from lower case 
const static char* _gSHFT[]={ "NULL" , "A" , "U" , "C" , "I" , "E" , "R" , "T" , "H" , "G" , "J" , "N" , "Á" , "B" , "K" , "O" , "P" , "F" , "Q" , "S" , "W" , "M" , "V" , "L" , "X" , "Y" , "Z" , "D"  , "Ú"     , "É"    , "Ó"   , "." , "," , "¡" , "¿" , "_" , "\'" , "\\" , "/" , "Ñ"    , "Ü"      , "Í"};

// CAPS: (NULL +) only first 41 characters are different from lower case (_gChar[])
const static char* _gCAPS[]={ "NULL" , "A" , "U" , "C" , "I" , "E" , "R" , "T" , "H" , "G" , "J" , "N" , "Á" , "B" , "K" , "O" , "P" , "F" , "Q" , "S" , "W" , "M" , "V" , "L" , "X" , "Y" , "Z" , "D"  , "Ú"     , "É"    , "Ó"   , "." , "," , "!" , "?" , "-" , "\'" , "\\" , "/" , "Ñ"    , "Ü"      , "Í"};

// NUMS: (NULL +) only first 41 may differ from lower case
const static char* _gNUMS[]={"NULL" , "1" , "2" , "3" , "4" , "5" , "6" , "0" , "7" , "8" , "9" , "#" , "@" , "½" , "&" , "+" , "%" , "^" , "=" , "*" , "$" , "€" , "£" , "(" , "[" , "<" , "{" , ")"  , "]"     , ">"    , "}"   , "." , "," , "|"  , "~" , "-" , "\'" , "\\" , "/" , "μ"    , "\u0308" , "ª"};

const static char* _gSYMB[]={"NULL" , "1" , "2" , "3" , "4" , "5" , "6" , "0" , "7" , "8" , "9" , "#" , "@" , "½" , "&" , "+" , "%" , "^" , "=" , "*" , "$" , "€" , "£" , "(" , "[" , "<" , "{" , ")"  , "]"     , ">"    , "}"   , ":" , ";" , "|"  , "~" , "_" , "\"" , "`"  , "´" , "μ"    , "§"      , "º", "_Up", "_Down", "_PgUp", "_PgDn", "_BS", "_Left", "_WLeft", "_Home", " ", "_Right", "_WRight", "_End", "_Enter", "_Tab", "_Esc", "_Del", "°", "_Shift", "_SYMB", "_123abc", "_Ctrl", "_Alt" };





                var opt = optimized ? 1: 0; // optLayout == 1, opt == 1; opt3 = 0 // Recommended optimisation
                if (opt3 == 1){opt = 0;}    // optLayout == 1, opt == 0, opt3 = 1 // Experimental optimisation


    // debug:
    console.log("Language: " + lan + ", lang: " + lang + ", opt: " + opt )


//		int opt = 0;
//		if (optimizedLayout){
//				opt = 1; // Optimized Layout in use
//		}
//
                // Modify set according to language setting in preferences
                // 0, 64, 129, 192, 256 = abc, Abc, ABC, 123, SYMB, Hangul (한글)

                // TODO: remove redundancy

                // Leave this part as is if Korean was selected
//                if (lang != Language.valueOf("Korean")){
                    if (lang != 14){ // TODO

                // Basic latin a-z / A-Z every time

                GKOSChars[8 + j + 4 * opt + 1 * opt3] = "h";
                GKOSChars[9 + j - 5 * opt - 7 * opt3] = "i";
                GKOSChars[10 + j] = "j";
                GKOSChars[11 + j + 3 * opt + 3 * opt3] = "k";
                GKOSChars[12 + j + 11 * opt + 11 * opt3] = "l";
                GKOSChars[13 + j - 11 * opt - 7 * opt3] = "m";
                GKOSChars[14 + j - 3 * opt - 3 * opt3] = "n";
                GKOSChars[15 + j] = "o";
                GKOSChars[16 + j] = "p";
                GKOSChars[17 + j + 1 * opt3] = "q";
                GKOSChars[18 + j - 12 * opt - 15 * opt3] = "r";
                GKOSChars[19 + j] = "s";
                GKOSChars[20 + j - 13 * opt - 13 * opt3] = "t";
                GKOSChars[21 + j - 17 * opt3] = "u";
                GKOSChars[22 + j] = "v";
      for (var j = 0; j < 321; j = j + 320) { // Lower case 0 - 65 and aux 320

                GKOSChars[1 + j] = "a";
                GKOSChars[2 + j + 11 * opt + 11 * opt3] = "b";
                GKOSChars[3 + j + 18 * opt3] = "c";
                GKOSChars[4 + j + 23 * opt + 23 * opt3] = "d";
                GKOSChars[5 + j] = "e";
                GKOSChars[6 + j + 12 * opt + 11 * opt3] = "f";
                GKOSChars[7 + j + 2 * opt + 5 * opt3] = "g";
                GKOSChars[8 + j + 4 * opt + 1 * opt3] = "h";
                GKOSChars[9 + j - 5 * opt - 7 * opt3] = "i";
                GKOSChars[10 + j] = "j";
                GKOSChars[11 + j + 3 * opt + 3 * opt3] = "k";
                GKOSChars[12 + j + 11 * opt + 11 * opt3] = "l";
                GKOSChars[13 + j - 11 * opt - 7 * opt3] = "m";
                GKOSChars[14 + j - 3 * opt - 3 * opt3] = "n";
                GKOSChars[15 + j] = "o";
                GKOSChars[16 + j] = "p";
                GKOSChars[17 + j + 1 * opt3] = "q";
                GKOSChars[18 + j - 12 * opt - 15 * opt3] = "r";
                GKOSChars[19 + j] = "s";
                GKOSChars[20 + j - 13 * opt - 13 * opt3] = "t";
                GKOSChars[21 + j - 17 * opt3] = "u";
                GKOSChars[22 + j] = "v";
                GKOSChars[23 + j - 3 * opt - 3 * opt3] = "w";
                GKOSChars[24 + j] = "x";
                GKOSChars[25 + j] = "y";
                GKOSChars[26 + j] = "z";



                for (var i = 0; i < 65; i = i + 64) { // Upper case 65 - 128, CAPS 129 -
                                                                                                // 191
                        GKOSChars[65 + j + i] = "A";
                        GKOSChars[66 + j + i + 11 * opt + 11 * opt3] = "B";
                        GKOSChars[67 + j + i + 18 * opt3] = "C";
                        GKOSChars[68 + j + i + 23 * opt + 23 * opt3] = "D";
                        GKOSChars[69 + j + i] = "E";
                        GKOSChars[70 + j + i + 12 * opt + 11 * opt3] = "F";
                        GKOSChars[71 + j + i + 2 * opt + 5 * opt3] = "G";
                        GKOSChars[72 + j + i + 4 * opt + 1 * opt3] = "H";
                        GKOSChars[73 + j + i - 5 * opt - 7 * opt3] = "I";
                        GKOSChars[74 + j + i] = "J";
                        GKOSChars[75 + j + i + 3 * opt + 3 * opt3] = "K";
                        GKOSChars[76 + j + i + 11 * opt + 11 * opt3] = "L";
                        GKOSChars[77 + j + i - 11 * opt - 7 * opt3] = "M";
                        GKOSChars[78 + j + i - 3 * opt - 3 * opt3] = "N";
                        GKOSChars[79 + j + i] = "O";
                        GKOSChars[80 + j + i] = "P";
                        GKOSChars[81 + j + i + 1 * opt3] = "Q";
                        GKOSChars[82 + j + i - 12 * opt - 15 * opt3] = "R";
                        GKOSChars[83 + j + i] = "S";
                        GKOSChars[84 + j + i - 13 * opt - 13 * opt3] = "T";
                        GKOSChars[85 + j + i - 17 * opt3] = "U";
                        GKOSChars[86 + j + i] = "V";
                        GKOSChars[87 + j + i - 3 * opt - 3 * opt3] = "W";
                        GKOSChars[88 + j + i] = "X";
                        GKOSChars[89 + j + i] = "Y";
                        GKOSChars[90 + j + i] = "Z";

                        // Optimized layout: Also swap parenthesis on TH and W keys: )( => ()
                        GKOSChars[23 + 192 + i + opt * 4 + 4 * opt3] = "(";
                        GKOSChars[27 + 192 + i - opt * 4 - 4 * opt3] = ")";
                        // Optimized layout: Also swap # and @ keys:
                        GKOSChars[11 + 192 + i + opt + opt3] = "#";
                        GKOSChars[12 + 192 + i - opt - opt3] = "@";


                } // i

           } // j

      if (opt == 1){ // for aux sets only

                  GKOSChars[8 + 320] = "the ";
                  GKOSChars[8 + 320 + 64] = "The ";
                  GKOSChars[8 + 320 + 128] = "THE "; // with
      }

                } // End of not Korean

                // Most languages have these:

                GKOSChars[33 + 256] = "\u0021"; // = !
                GKOSChars[34 + 256] = "\u003f"; // = ?
                GKOSChars[41 + 192] = "\u007e"; // NUM: Tilde (~)(small 02dc, bigger 007e)
                GKOSChars[57 + 256] = "\u00ba"; // SYMB/Ins: Degree sign (also 02da is but smaller)

                GKOSChars[40 + 256] = "§"; // SYMB/keyS
                GKOSChars[39 + 192] = "\u00b5"; // NUM/keyK: µ, mu, myy (middle key righ down)
                GKOSChars[39 + 256] = "\u00a8"; // SYMB/keyK: double dots
                GKOSChars[57 + 256] = "\u00ba"; // SYMB/Ins: Degree sign (also 02da is but smaller)

                GKOSChars[35 + 256] = "»"; // SYMB/-
                GKOSChars[36 + 256] = "«"; // SYMB/'

                // Punctuation must be initialized also due to Devanagari
                GKOSChars[31] = "."; // Abc
                GKOSChars[95] = ":"; // Abc
                GKOSChars[95 + 64] = "."; // ABC

                GKOSChars[32] = ","; // Abc
                GKOSChars[96] = ";"; // Abc
                GKOSChars[96 + 64] = ","; // ABC

                GKOSChars[33] = "!"; // Abc
                GKOSChars[97] = "|"; // Abc
                GKOSChars[97 + 64] = "!"; // ABC

                GKOSChars[34] = "?"; // Abc
                GKOSChars[98] = "\u007e"; // Abc tilde
                GKOSChars[98 + 64] = "?"; // ABC

                GKOSChars[35] = "-"; // Abc
                GKOSChars[99] = "_"; // Abc
                GKOSChars[99 + 64] = "-"; // ABC

                GKOSChars[36] = "'"; // Abc
                GKOSChars[100] = "\""; // Abc
                GKOSChars[100 + 64] = "'"; // ABC





                case Language.Spanish: // Spanish

                // TH/ü = ú
                GKOSChars[27] = "\u00fa"; GKOSChars[27 + 64] = "\u00da"; GKOSChars[27 + 128] = "\u00da"; // á (th)
(insert(format "\u00fa"))ú
(insert(format "\u00da"))Ú


                        if (opt == 1){
                                setBasicOptimisation();

                                GKOSChars[3] = "c"; GKOSChars[3 + 64] = "C"; GKOSChars[3 + 128] = "C"; // c => K
                                GKOSChars[14] = "k"; GKOSChars[14 + 64] = "K"; GKOSChars[14 + 128] = "K"; // k => C (n orig)

                                GKOSChars[2] = "u"; GKOSChars[2 + 64] = "U"; GKOSChars[2 + 128] = "U"; // u => M (b orig)
                                GKOSChars[21] = "m"; GKOSChars[21 + 64] = "M"; GKOSChars[21 + 128] = "M"; // m => U
                                // orig l = á:
                                GKOSChars[12] = "á"; GKOSChars[12 + 64] = "Á"; GKOSChars[12 + 128] = "Á"; // á (th)

                                }


                        GKOSChars[28] = "\u00e1";
(insert(format "\u00e1"))á
                        GKOSChars[28 + 64] = "\u00c1";
(insert(format "\u00c1"))Á
                        GKOSChars[28 + 128] = "\u00c1"; // that 

                        GKOSChars[29] = "\u00e9";
(insert(format "\u00e9"))é
                        GKOSChars[29 + 64] = "\u00c9";
(insert(format "\u00c9"))É
                        GKOSChars[29 + 128] = "\u00c9";// the

                        GKOSChars[30] = "\u00f3";
(insert(format "\u00f3"))ó
                        GKOSChars[30 + 64] = "\u00d3";
(insert(format "\u00d3"))Ó
                        GKOSChars[30 + 128] = "\u00d3"; // of
                        // ---
                        GKOSChars[33 + 256] = "\u00a1"; // inverted !
(insert(format "\u00a1"))¡
                        GKOSChars[34 + 256] = "\u00bf"; // inverted ?
(insert(format "\u00bf"))¿
                        // ---
                        GKOSChars[39] = "\u00f1"; // ñ
(insert(format "\u00f1"))ñ
                        GKOSChars[39 + 64] = "\u00d1";
(insert(format "\u00d1"))Ñ
                        GKOSChars[39 + 128] = "\u00d1"; // and
(insert(format "\u00d1"))Ñ
                        GKOSChars[39 + 192] = "\u005e"; // inv v
(insert(format "\u005e"))^

                        GKOSChars[40] = "\u00fc";
(insert(format "\u00fc"))ü
                        GKOSChars[40 + 64] = "\u00dc";
(insert(format "\u00dc"))Ü
                        GKOSChars[40 + 128] = "\00dc"; // with
                        GKOSChars[40 + 192] = "\u0308"; // diaer
(insert(format "\u0308")) ̈

                        GKOSChars[41] = "\u00ed"; // to?
(insert(format "\u00ed"))í
                        GKOSChars[41 + 64] = "\u00cd";
(insert(format "\u00cd"))Í
                        GKOSChars[41 + 128] = "\u00cd";
                        //GKOSChars[41 + 192] = "\u00cd"; //
                        GKOSChars[41 + 256] = "\u00aa"; // a high up
(insert(format "\u00aa"))ª

                        //GKOSChars[57 + 256] = "\u00ba"; // SYMB/Ins: o high up 
(insert(format "\u00ba"))º
                        break;


insert("\u00ed"(buffer-string))

("\u0050")

(insert(format "\u0050"))P
